# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- dev

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '9c5f4690-77b4-4139-9fc5-c54c9b94b91e'
  imageRepository: 'devopsoh/api-userprofile'
  containerRegistry: 'openhack0ok2ryx3acr.azurecr.io'
  resourceGroup: 'openhack0ok2ryx3rg'
  webAppName: 'openhack0ok2ryx3userprofile'
  slotName: 'staging'
  dockerfilePath: '$(Build.SourcesDirectory)/apis/userprofile/web/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
- stage: DeployStagingStage
  displayName: 'Deploy App to Staging Slot'
  dependsOn: Build
  jobs:
  - job:  DeployApp
    displayName: 'Deploy App in Dev'
    steps:
    - task: AzureRmWebAppDeployment@4
      inputs:
         appType: webAppContainer
         DockerRepository: $(imageRepository)
         DockerNamespace: $(containerRegistry)
         DockerImageTag: $(tag)
         ConnectionType: AzureRM            
         ConnectedServiceName: 'azure'
         ResourceGroupName: $(resourceGroup)
         WebAppName: $(webAppName)
         deployToSlotOrASE: true
         SlotName: $(slotName)
  
- stage: Prod
  displayName: 'Deploy App to Production'
  dependsOn: DeployStagingStage
  condition: and(contains(variables['build.sourceBranch'], 'refs/heads/main'), succeeded())
  jobs:
  - job:  DeployApp
    displayName: 'Deploy App Production'
    steps:
    - task: AzureRmWebAppDeployment@4
      inputs:
         appType: webAppContainer
         DockerRepository: $(imageRepository)
         DockerNamespace: $(containerRegistry)
         DockerImageTag: $(tag)
         ConnectionType: AzureRM            
         ConnectedServiceName: 'azure'
         ResourceGroupName: $(resourceGroup)
         WebAppName: $(webAppName)
